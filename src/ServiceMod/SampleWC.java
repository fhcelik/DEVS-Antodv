	package ServiceMod;
	
	import java.awt.Color;
import java.awt.Dimension;
import java.awt.Point;
import java.util.ArrayList;

import view.modeling.ViewableComponent;
import GenCol.Pair;
import GenService.ApplicationComposition;
import GenService.ServiceBroker;
import GenService.ServiceClient;
import GenService.ServiceLookupMessage;
import GenService.ServiceRouter;
	
	public class SampleWC extends ApplicationComposition{
		
		public final static double observation = 70;
		public ServiceBroker Broker;
		public ServiceRouter Router;
		
		public SampleWC(){
			super("Travel Agent Service");
		}
		
		public void BrokerRouterConstruct(){
			
			//attributes 
			double available = 60;     //available time for broker
			double startTime = 0.5; 
		 	double bandwidth = 10;      //bandwidth for the network or router
            
		 	//Ceate an unique component
			Broker = new ServiceBroker("Broker", available, startTime);
			Router = new ServiceRouter("Router Link", bandwidth);			
			Broker.setBackgroundColor(Color.YELLOW);
			Router.setBackgroundColor(Color.PINK);
			
			BrokerList.add(Broker);
			RouterList.add(Router);			
		}
		
		public void PublisherConstruct(){
			
			ArrayList <Pair> Endpoints = new ArrayList <Pair> ();
	 		
			
			
			
			Endpoints = new ArrayList <Pair> ();
			Endpoints.add(new Pair("CityByZip", "Double"));		
			USZipService Service2 = 
				new USZipService("USZip", "City by Zip Service", "Atomic", Endpoints, 1);
			Service2.setBackgroundColor(Color.CYAN);
			PublisherList.add(Service2);
			
			Endpoints = new ArrayList <Pair> ();	 		
			Endpoints.add(new Pair("ResortByCity", "String"));		
			ResortService Service3 = 
				new ResortService("Ski Resort", "Resort by City Service", "Atomic", Endpoints, 1);
			Service3.setBackgroundColor(Color.CYAN);
			PublisherList.add(Service3);				
		}
		
		
		
		public void SubscriberConstruct(){
			
			//Construct ServiceLookup information: The list of service to subscribe
			ArrayList <ServiceLookupMessage> lookupList = new ArrayList <ServiceLookupMessage> ();			
			lookupList.add(new ServiceLookupMessage("USZip", "CityByZip", new Pair("Double", 85281), 1));
			lookupList.add(new ServiceLookupMessage("Ski Resort", "ResortByCity", new Pair("String", "tempe"), 1));
			//lookupList.add(new ServiceLookup("VoiceComm", "qRate", new Pair("Hz", 220500), 60));
			ServiceClient Subscriber1 = new ServiceClient("Travel Agent", lookupList, 0.1);
			
			
			Subscriber1.setBackgroundColor(Color.GREEN);
			
			//Construct the subscriber list
			SubscriberList.add(Subscriber1);
					
		}  
		
		public void TransducerConstruct(){
			BrokerTransd BroTrans  =  new BrokerTransd("BrokerTransd", observation);
			RouterTransd NecTrans  =  new RouterTransd("RouterTransd", observation);
			SubscriberTransd SubTrans1 =  new SubscriberTransd("TravelTransd", observation);
			
			
			//PublisherTransd PubTrans1 =  new PublisherTransd("VoiceCommTransd", observation);
			PublisherTransd PubTrans2 =  new PublisherTransd("USZipTransd", observation);
			PublisherTransd PubTrans3 =  new PublisherTransd("ResortTransd", observation);
			
			BroTrans.setBackgroundColor(Color.LIGHT_GRAY);
			NecTrans.setBackgroundColor(Color.LIGHT_GRAY);
			SubTrans1.setBackgroundColor(Color.LIGHT_GRAY);
			PubTrans2.setBackgroundColor(Color.LIGHT_GRAY);
			PubTrans3.setBackgroundColor(Color.LIGHT_GRAY);
			
			//Always the same order: Broker >> Network >> Subscriber >> Publisher
			TransducerList.add(BroTrans);
			TransducerList.add(NecTrans);
			TransducerList.add(SubTrans1);

			//TransducerList.add(PubTrans1);
			TransducerList.add(PubTrans2);
			TransducerList.add(PubTrans3);
		}   
   
   
    
    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(662, 301);
        ((ViewableComponent)withName("ResortTransd")).setPreferredLocation(new Point(424, 227));
        ((ViewableComponent)withName("Broker")).setPreferredLocation(new Point(183, 88));
        ((ViewableComponent)withName("BrokerTransd")).setPreferredLocation(new Point(214, 32));
        ((ViewableComponent)withName("RouterTransd")).setPreferredLocation(new Point(203, 158));
        ((ViewableComponent)withName("Ski Resort")).setPreferredLocation(new Point(370, 171));
        ((ViewableComponent)withName("Travel Agent")).setPreferredLocation(new Point(-9, 145));
        ((ViewableComponent)withName("TravelTransd")).setPreferredLocation(new Point(7, 87));
        ((ViewableComponent)withName("Router Link")).setPreferredLocation(new Point(208, 214));
        ((ViewableComponent)withName("USZipTransd")).setPreferredLocation(new Point(419, 110));
        ((ViewableComponent)withName("USZip")).setPreferredLocation(new Point(379, 56));
    }
}
